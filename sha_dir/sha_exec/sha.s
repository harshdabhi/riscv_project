	.file	"sha_code_workloadv1.c"
	.option pic
	.text
	.align	1
	.globl	sha256_transform
	.type	sha256_transform, @function
sha256_transform:
	addi	sp,sp,-432
	sd	s0,416(sp)
	sd	s1,408(sp)
	sd	s11,328(sp)
	sd	ra,424(sp)
	sd	s2,400(sp)
	sd	s3,392(sp)
	sd	s4,384(sp)
	sd	s5,376(sp)
	sd	s6,368(sp)
	sd	s7,360(sp)
	sd	s8,352(sp)
	sd	s9,344(sp)
	sd	s10,336(sp)
	lbu	a4,0(a1)
	lbu	s10,3(a1)
	lbu	a3,1(a1)
	lbu	a6,8(a1)
	lbu	s8,9(a1)
	lbu	a2,12(a1)
	lbu	s7,13(a1)
	lbu	s6,16(a1)
	lbu	s4,17(a1)
	lbu	a7,4(a1)
	lbu	s9,5(a1)
	lbu	a5,20(a1)
	lbu	t2,21(a1)
	lbu	s5,7(a1)
	lbu	s3,11(a1)
	lbu	s2,15(a1)
	lbu	t0,2(a1)
	lbu	t6,6(a1)
	lbu	t5,10(a1)
	slliw	a4,a4,24
	lbu	t4,14(a1)
	lbu	s1,19(a1)
	lbu	t3,18(a1)
	lbu	s0,23(a1)
	lbu	t1,22(a1)
	or	a4,a4,s10
	slliw	a3,a3,16
	slliw	s8,s8,16
	slliw	s7,s7,16
	slliw	s6,s6,24
	slliw	s4,s4,16
	slliw	a6,a6,24
	slliw	a2,a2,24
	slliw	s9,s9,16
	slliw	t2,t2,16
	or	a4,a4,a3
	or	a6,a6,s8
	or	a3,s6,s4
	or	a2,a2,s7
	slliw	a7,a7,24
	slliw	a5,a5,24
	or	a7,a7,s9
	or	a5,a5,t2
	or	a6,a6,s3
	slliw	t5,t5,8
	or	a2,a2,s2
	slliw	t4,t4,8
	or	a3,a3,s1
	slliw	t3,t3,8
	or	a6,a6,t5
	or	a2,a2,t4
	or	a3,a3,t3
	slliw	t0,t0,8
	or	a7,a7,s5
	slliw	t6,t6,8
	or	a5,a5,s0
	slliw	t1,t1,8
	la	s0,__stack_chk_guard
	lbu	s1,24(a1)
	lbu	t2,32(a1)
	or	a7,a7,t6
	or	a5,a5,t1
	or	a4,a4,t0
	ld	t1, 0(s0)
	sd	t1, 312(sp)
	li	t1, 0
	sw	a6,64(sp)
	lbu	s0,28(a1)
	lbu	a6,25(a1)
	sw	a2,68(sp)
	sw	a3,72(sp)
	lbu	a2,29(a1)
	lbu	a3,33(a1)
	lbu	s3,40(a1)
	lbu	t1,41(a1)
	lbu	s2,44(a1)
	sw	a7,60(sp)
	sext.w	a4,a4
	lbu	a7,45(a1)
	lbu	s9,43(a1)
	lbu	s4,36(a1)
	lbu	s10,39(a1)
	lbu	t0,38(a1)
	lbu	t6,42(a1)
	lbu	s8,47(a1)
	lbu	t5,46(a1)
	lbu	s7,27(a1)
	sw	a5,76(sp)
	sw	a4,56(sp)
	lbu	a5,37(a1)
	lbu	t4,26(a1)
	lbu	t3,30(a1)
	lbu	s5,35(a1)
	lbu	s6,31(a1)
	lbu	s11,34(a1)
	slliw	s1,s1,24
	slliw	s0,s0,24
	slliw	t2,t2,24
	slliw	a6,a6,16
	slliw	a2,a2,16
	slliw	a3,a3,16
	slliw	s3,s3,24
	slliw	s2,s2,24
	or	a6,s1,a6
	or	a2,s0,a2
	or	a3,t2,a3
	slliw	t1,t1,16
	slliw	a7,a7,16
	slliw	t2,t3,8
	or	t1,s3,t1
	or	a7,s2,a7
	slliw	t4,t4,8
	or	a3,a3,s5
	or	a6,a6,s7
	or	a2,a2,s6
	slliw	s11,s11,8
	or	t1,t1,s9
	or	a6,a6,t4
	or	a2,a2,t2
	slliw	s4,s4,24
	slliw	t6,t6,8
	or	a7,a7,s8
	slliw	t5,t5,8
	or	a3,a3,s11
	slliw	a5,a5,16
	or	t3,t1,t6
	lbu	s5,49(a1)
	or	t1,a7,t5
	lbu	s2,57(a1)
	lbu	a7,48(a1)
	lbu	s0,61(a1)
	or	a5,s4,a5
	sw	a6,80(sp)
	lbu	s4,53(a1)
	lbu	a6,52(a1)
	sw	a2,84(sp)
	sw	a3,88(sp)
	lbu	a2,56(a1)
	lbu	a3,60(a1)
	slliw	t0,t0,8
	or	a5,a5,s10
	lbu	s1,55(a1)
	lbu	s3,51(a1)
	lbu	t6,50(a1)
	lbu	t5,54(a1)
	lbu	t2,59(a1)
	lbu	t4,58(a1)
	or	a5,a5,t0
	lbu	t0,63(a1)
	lbu	a1,62(a1)
	slliw	s0,s0,16
	slliw	a7,a7,24
	slliw	s5,s5,16
	slliw	a6,a6,24
	slliw	s4,s4,16
	slliw	a2,a2,24
	slliw	s2,s2,16
	slliw	a3,a3,24
	or	a3,a3,s0
	or	a7,a7,s5
	or	a6,a6,s4
	or	a2,a2,s2
	or	a6,a6,s1
	slliw	a1,a1,8
	or	a7,a7,s3
	slliw	t6,t6,8
	slliw	t5,t5,8
	or	a2,a2,t2
	slliw	t4,t4,8
	or	a3,a3,t0
	or	a3,a3,a1
	or	a7,a7,t6
	or	a6,a6,t5
	or	a2,a2,t4
	sext.w	a5,a5
	sext.w	t3,t3
	sext.w	t1,t1
	sext.w	a7,a7
	sext.w	a6,a6
	sext.w	a2,a2
	sext.w	a3,a3
	addi	s0,sp,56
	sw	a5,92(sp)
	sw	t3,96(sp)
	sw	t1,100(sp)
	mv	s9,a0
	sw	a7,104(sp)
	sw	a6,108(sp)
	sw	a2,112(sp)
	sw	a3,116(sp)
	mv	a1,s0
	li	s1,16
.L2:
	lw	t0,4(a1)
	srliw	s4,a2,17
	srliw	s3,a2,19
	slliw	s2,t0,25
	srliw	t2,t0,18
	slliw	a0,a2,15
	slliw	t6,a2,13
	srliw	t4,t0,7
	slliw	t5,t0,14
	or	t6,t6,s3
	or	t5,t5,t2
	or	a0,a0,s4
	or	t4,t4,s2
	srliw	t2,a2,10
	xor	a0,a0,t6
	xor	t4,t4,t5
	srliw	t6,t0,3
	xor	t4,t4,t6
	xor	a0,a0,t2
	lw	t5,12(a1)
	lw	t6,8(a1)
	addw	a0,a0,t4
	addw	a4,a0,a4
	addw	a5,a4,a5
	srliw	s3,a3,19
	srliw	t4,a3,17
	slliw	s5,a3,13
	slliw	a4,a3,15
	srliw	s2,t5,18
	slliw	a0,t5,25
	or	s5,s5,s3
	slliw	s10,t6,14
	srliw	s8,t6,7
	slliw	t2,t5,14
	srliw	s4,t5,7
	or	a4,a4,t4
	srliw	s3,t6,18
	slliw	t4,t6,25
	or	s4,s4,a0
	srliw	s11,a3,10
	or	s3,s10,s3
	or	t2,t2,s2
	srliw	a0,a5,19
	slliw	s6,a5,15
	xor	a4,s5,a4
	or	t4,s8,t4
	slliw	s7,a5,13
	srliw	s2,a5,17
	lw	s5,16(a1)
	xor	t2,t2,s4
	srliw	s8,t5,3
	or	s2,s6,s2
	xor	t4,s3,t4
	or	s7,s7,a0
	srliw	s3,t6,3
	xor	a4,a4,s11
	xor	a0,t2,s8
	xor	s7,s7,s2
	srliw	t2,a5,10
	addw	a4,a4,t0
	xor	t0,t4,s3
	addw	a4,a4,t0
	xor	t4,s7,t2
	addw	a0,a0,t6
	addw	t3,a4,t3
	addw	a0,a0,t4
	srliw	s2,s5,7
	slliw	t4,s5,25
	lw	s4,20(a1)
	or	s2,s2,t4
	slliw	t4,t3,15
	slliw	s10,t3,13
	sw	t4,0(sp)
	srliw	s8,t3,19
	or	s8,s10,s8
	ld	s10,0(sp)
	addw	a0,a0,t1
	srliw	t6,s5,18
	slliw	s3,s5,14
	slliw	t1,s4,25
	srliw	a4,s4,18
	srliw	t0,s4,7
	slliw	t2,s4,14
	or	s3,s3,t6
	or	t2,t2,a4
	or	t0,t0,t1
	slliw	s6,a0,15
	srliw	t1,a0,17
	slliw	s11,a0,13
	srliw	s7,a0,19
	srliw	t4,t3,17
	lw	t6,24(a1)
	lw	a4,28(a1)
	xor	t0,t0,t2
	xor	s2,s3,s2
	or	t4,s10,t4
	srliw	s3,s5,3
	srliw	t2,s4,3
	or	s6,s6,t1
	or	s7,s11,s7
	xor	s2,s2,s3
	xor	t4,s8,t4
	xor	t1,t0,t2
	xor	s6,s6,s7
	srliw	t2,a0,10
	srliw	s3,t3,10
	addw	t0,s2,t5
	addw	t1,t1,s5
	xor	t5,t4,s3
	xor	t4,s6,t2
	addw	t1,t1,t4
	slliw	s7,t6,25
	slliw	t2,t6,14
	srliw	s6,t6,18
	addw	t0,t0,t5
	srliw	s2,t6,7
	srliw	s5,a4,7
	slliw	t5,a4,25
	srliw	s3,a4,18
	slliw	t4,a4,14
	addw	t0,t0,a7
	addw	a6,t1,a6
	or	a7,t2,s6
	or	t4,t4,s3
	or	t2,s5,t5
	or	s2,s2,s7
	xor	t2,t2,t4
	xor	s2,s2,a7
	srliw	t1,t6,3
	slliw	s10,t0,15
	srliw	t5,t0,17
	slliw	s8,t0,13
	srliw	s5,t0,19
	srliw	a7,a4,3
	slliw	s7,a6,15
	srliw	t4,a6,17
	slliw	s3,a6,13
	srliw	s6,a6,19
	xor	a7,t2,a7
	xor	t1,s2,t1
	or	t5,s10,t5
	or	s5,s8,s5
	or	t4,s7,t4
	or	s3,s3,s6
	addw	a7,a7,t6
	addw	t1,t1,s4
	xor	t5,t5,s5
	srliw	t2,t0,10
	xor	t4,t4,s3
	srliw	t6,a6,10
	addw	a2,t1,a2
	addw	a3,a7,a3
	xor	t1,t5,t2
	xor	a7,t4,t6
	addw	a2,a2,t1
	addw	a3,a3,a7
	sw	a0,72(a1)
	sw	a5,64(a1)
	sw	t3,68(a1)
	sw	t0,76(a1)
	sw	a6,80(a1)
	sw	a2,84(a1)
	sw	a3,88(a1)
	sext.w	t1,a0
	addiw	s1,s1,7
	li	a0,58
	sext.w	a7,t0
	addi	a1,a1,28
	bne	s1,a0,.L2
	lw	a0,280(sp)
	lw	t6,284(sp)
	lw	t0,228(sp)
	lw	t1,232(sp)
	lw	s1,224(sp)
	lw	t2,264(sp)
	srliw	a2,a0,19
	srliw	a5,a0,17
	srliw	a7,t6,17
	srliw	a3,t6,19
	lw	a4,260(sp)
	slliw	a6,a0,13
	slliw	t5,a0,15
	slliw	a1,t6,15
	slliw	t4,t6,13
	or	t5,t5,a5
	srliw	s4,t0,18
	slliw	a5,t0,25
	or	t4,t4,a3
	slliw	s3,t1,25
	srliw	s2,t1,18
	or	a6,a6,a2
	srliw	t3,t0,7
	slliw	a2,t0,14
	or	a1,a1,a7
	srliw	a3,t1,7
	slliw	a7,t1,14
	or	t3,t3,a5
	or	a7,a7,s2
	srliw	a5,t6,10
	xor	a6,a6,t5
	or	a2,a2,s4
	srliw	t5,a0,10
	xor	a1,a1,t4
	or	a3,a3,s3
	xor	a6,a6,t5
	xor	a1,a1,a5
	addw	a4,a4,s1
	addw	a5,t2,t0
	xor	a2,a2,t3
	xor	a3,a3,a7
	srliw	t3,t0,3
	srliw	a7,t1,3
	xor	a2,a2,t3
	xor	a3,a3,a7
	addw	a4,a4,a6
	addw	a5,a5,a1
	lw	t3,236(sp)
	lw	a6,240(sp)
	addw	a4,a4,a2
	addw	a5,a5,a3
	srliw	s1,a4,17
	srliw	t2,a4,19
	slliw	a7,a4,15
	slliw	a2,a4,13
	srliw	t0,a5,17
	srliw	t6,a5,19
	slliw	a1,a5,15
	slliw	a3,a5,13
	lw	t5,272(sp)
	or	a2,a2,t2
	or	a3,a3,t6
	lw	t4,268(sp)
	or	a7,a7,s1
	or	a1,a1,t0
	srliw	s5,a4,10
	slliw	s4,t3,25
	srliw	s3,t3,18
	slliw	s1,a6,25
	srliw	t2,a6,18
	xor	a7,a7,a2
	slliw	t0,t3,14
	srliw	a2,t3,7
	xor	a1,a1,a3
	srliw	s2,a5,10
	srliw	a3,a6,7
	slliw	t6,a6,14
	xor	a7,a7,s5
	or	t0,t0,s3
	xor	a1,a1,s2
	or	t6,t6,t2
	or	a2,a2,s4
	or	a3,a3,s1
	addw	t4,t4,a7
	xor	a2,a2,t0
	addw	a7,t5,a1
	srliw	t0,t3,3
	srliw	a1,a6,3
	xor	a3,a3,t6
	xor	a2,a2,t0
	xor	a3,a3,a1
	addw	t1,t4,t1
	addw	a7,a7,t3
	lw	t6,244(sp)
	addw	a7,a7,a3
	addw	t1,t1,a2
	lw	a3,248(sp)
	srliw	s2,t1,17
	srliw	s1,t1,19
	srliw	t2,a7,17
	srliw	t0,a7,19
	slliw	a2,t1,15
	slliw	t5,t1,13
	slliw	a1,a7,15
	slliw	t3,a7,13
	or	t5,t5,s1
	or	t3,t3,t0
	lw	t4,276(sp)
	or	a2,a2,s2
	or	a1,a1,t2
	slliw	s2,a3,25
	srliw	s1,a3,18
	xor	a2,a2,t5
	srliw	s6,t1,10
	slliw	s5,t6,25
	srliw	s4,t6,18
	xor	a1,a1,t3
	srliw	s3,a7,10
	srliw	t3,a3,7
	slliw	t2,a3,14
	srliw	t5,t6,7
	slliw	t0,t6,14
	xor	a2,a2,s6
	or	t0,t0,s4
	lw	s6,24(s9)
	lw	s4,16(s9)
	xor	a1,a1,s3
	or	t5,t5,s5
	lw	s3,8(s9)
	lw	s5,20(s9)
	or	t3,t3,s2
	or	t2,t2,s1
	lw	s2,28(s9)
	lw	s1,12(s9)
	addw	t4,t4,a2
	lw	s11,0(s9)
	lw	s10,4(s9)
	xor	t5,t5,t0
	addw	a2,a1,t6
	xor	t3,t3,t2
	srliw	t0,t6,3
	srliw	a3,a3,3
	addw	a1,t4,a6
	xor	t5,t5,t0
	addw	a2,a2,a0
	xor	a3,t3,a3
	addw	a1,a1,t5
	addw	a3,a2,a3
	sw	a4,288(sp)
	sd	s3,0(sp)
	sd	s1,8(sp)
	sd	s4,16(sp)
	sd	s5,24(sp)
	sd	s6,32(sp)
	sd	s2,40(sp)
	sw	a5,292(sp)
	sw	t1,296(sp)
	sw	a7,300(sp)
	sw	a1,304(sp)
	lla	t5,.LANCHOR0
	sw	a3,308(sp)
	lla	s8,.LANCHOR0+256
	mv	a0,s6
	mv	t3,s5
	mv	a4,s4
	mv	t4,s3
	mv	a6,s10
	mv	a3,s11
	j	.L3
.L5:
	mv	a0,t3
	mv	t4,a6
	mv	t3,a2
	mv	a4,a1
	mv	a6,a7
	mv	a3,a5
.L3:
	slliw	a2,a4,26
	slliw	a5,a4,21
	lw	t1,0(t5)
	lw	s7,0(s0)
	srliw	a1,a4,6
	srliw	a7,a4,11
	srliw	t6,a4,25
	or	a7,a7,a5
	slliw	t2,a4,7
	or	a1,a1,a2
	or	t2,t2,t6
	not	a5,a4
	srliw	s6,a3,2
	slliw	a2,a3,30
	srliw	s5,a3,13
	slliw	t0,a3,19
	xor	a1,a1,a7
	and	s4,a4,t3
	xor	a1,a1,t2
	slliw	s3,a3,10
	srliw	t6,a3,22
	xor	a7,a6,t4
	addw	t1,s7,t1
	and	a5,a5,a0
	or	a2,s6,a2
	or	t0,s5,t0
	and	a7,a3,a7
	and	t2,a6,t4
	addw	t1,t1,a1
	xor	a5,a5,s4
	xor	a2,a2,t0
	or	t6,s3,t6
	xor	a7,a7,t2
	addw	a5,t1,a5
	xor	a2,a2,t6
	addw	a5,a5,s2
	addw	a2,a2,a7
	sext.w	a4,a4
	sext.w	a3,a3
	addi	t5,t5,4
	addw	a1,a5,s1
	addi	s0,s0,4
	addw	a5,a5,a2
	sext.w	a7,a3
	sext.w	a6,a6
	sext.w	s1,t4
	sext.w	a2,a4
	sext.w	t3,t3
	sext.w	s2,a0
	bne	s8,t5,.L5
	addw	s11,s11,a5
	ld	a5,0(sp)
	addw	s10,s10,a3
	sw	s11,0(s9)
	addw	a7,a5,a6
	ld	a5,8(sp)
	sw	s10,4(s9)
	sw	a7,8(s9)
	addw	a6,a5,t4
	ld	a5,16(sp)
	sw	a6,12(s9)
	addw	a2,a5,a1
	ld	a5,24(sp)
	sw	a2,16(s9)
	addw	a3,a5,a4
	ld	a5,32(sp)
	sw	a3,20(s9)
	addw	a4,a5,t3
	ld	a5,40(sp)
	sw	a4,24(s9)
	addw	a5,a5,a0
	sw	a5,28(s9)
	la	a5,__stack_chk_guard
	ld	a4, 312(sp)
	ld	a5, 0(a5)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L9
	ld	ra,424(sp)
	ld	s0,416(sp)
	ld	s1,408(sp)
	ld	s2,400(sp)
	ld	s3,392(sp)
	ld	s4,384(sp)
	ld	s5,376(sp)
	ld	s6,368(sp)
	ld	s7,360(sp)
	ld	s8,352(sp)
	ld	s9,344(sp)
	ld	s10,336(sp)
	ld	s11,328(sp)
	addi	sp,sp,432
	jr	ra
.L9:
	call	__stack_chk_fail@plt
	.size	sha256_transform, .-sha256_transform
	.align	1
	.globl	sha256_init
	.type	sha256_init, @function
sha256_init:
	li	a5,1779032064
	addi	a5,a5,1639
	sw	a5,0(a0)
	li	a5,-1150832640
	addi	a5,a5,-379
	sw	a5,4(a0)
	li	a5,1013903360
	addi	a5,a5,882
	sw	a5,8(a0)
	li	a5,-1521487872
	addi	a5,a5,1338
	sw	a5,12(a0)
	li	a5,1359892480
	addi	a5,a5,639
	sw	a5,16(a0)
	li	a5,-1694142464
	addi	a5,a5,-1908
	sw	a5,20(a0)
	li	a5,528736256
	addi	a5,a5,-1621
	sw	a5,24(a0)
	li	a5,1541459968
	addi	a5,a5,-743
	sw	a5,28(a0)
	ret
	.size	sha256_init, .-sha256_init
	.align	1
	.globl	sha256_update
	.type	sha256_update, @function
sha256_update:
	addi	sp,sp,-128
	sd	s4,80(sp)
	la	s4,__stack_chk_guard
	ld	a5, 0(s4)
	sd	a5, 72(sp)
	li	a5, 0
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	li	a5,63
	bleu	a2,a5,.L11
	addi	s1,a2,-64
	andi	s1,s1,-64
	addi	a5,a1,64
	mv	s3,a0
	mv	s0,a1
	add	s1,s1,a5
	addi	s2,sp,8
.L13:
	mv	a1,s0
	li	a2,64
	mv	a0,s2
	call	memcpy@plt
	addi	s0,s0,64
	mv	a1,s2
	mv	a0,s3
	call	sha256_transform
	bne	s0,s1,.L13
.L11:
	ld	a4, 72(sp)
	ld	a5, 0(s4)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L17
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	addi	sp,sp,128
	jr	ra
.L17:
	call	__stack_chk_fail@plt
	.size	sha256_update, .-sha256_update
	.align	1
	.globl	sha256_final
	.type	sha256_final, @function
sha256_final:
	addi	sp,sp,-224
	sd	s2,192(sp)
	sd	s3,184(sp)
	sd	s4,176(sp)
	sd	s5,168(sp)
	mv	s4,a2
	andi	s5,a2,63
	addi	s3,sp,24
	la	s2,__stack_chk_guard
	sd	s0,208(sp)
	sd	s1,200(sp)
	add	a1,a1,s4
	ld	a5, 0(s2)
	sd	a5, 152(sp)
	li	a5, 0
	mv	s0,a0
	mv	s1,a3
	mv	a2,s5
	li	a3,64
	mv	a0,s3
	sd	ra,216(sp)
	sd	zero,24(sp)
	sd	zero,32(sp)
	sd	zero,40(sp)
	sd	zero,48(sp)
	sd	zero,56(sp)
	sd	zero,64(sp)
	sd	zero,72(sp)
	sd	zero,80(sp)
	call	__memcpy_chk@plt
	addi	a4,sp,16
	addi	a5,s5,144
	add	a5,a5,a4
	li	a4,-128
	sb	a4,-136(a5)
	li	a5,55
	addi	a1,sp,88
	bgtu	s5,a5,.L23
.L19:
	slli	a4,s4,3
	srli	a2,a4,48
	andi	a2,a2,0xff
	slli	a2,a2,8
	srli	a5,a4,56
	srli	a0,a4,40
	or	a5,a5,a2
	li	a2,-16711680
	li	a3,-255
	addi	a2,a2,-1
	andi	a0,a0,0xff
	slli	a6,a3,24
	slli	a0,a0,16
	and	a5,a5,a2
	srli	a2,a4,32
	or	a5,a5,a0
	andi	a2,a2,0xff
	addi	a0,a6,-1
	slli	a2,a2,24
	and	a5,a5,a0
	slli	a0,a3,32
	or	a5,a5,a2
	srliw	a6,a4,24
	addi	a2,a0,-1
	slli	a6,a6,32
	and	a5,a5,a2
	srli	a0,a4,16
	slli	a2,a3,40
	or	a5,a5,a6
	addi	a2,a2,-1
	andi	a0,a0,0xff
	slli	a0,a0,40
	and	a5,a5,a2
	slli	a3,a3,48
	srli	a2,a4,8
	or	a5,a5,a0
	addi	a3,a3,-1
	andi	a2,a2,0xff
	slli	a2,a2,48
	and	a5,a5,a3
	or	a5,a5,a2
	slli	a5,a5,8
	slli	a4,a4,56
	srli	a5,a5,8
	or	a5,a5,a4
	ld	a4,24(sp)
	mv	a0,s0
	sd	a5,80(sp)
	sd	a4,88(sp)
	ld	a4,32(sp)
	sd	a5,144(sp)
	sd	a4,96(sp)
	ld	a4,40(sp)
	sd	a4,104(sp)
	ld	a4,48(sp)
	sd	a4,112(sp)
	ld	a4,56(sp)
	sd	a4,120(sp)
	ld	a4,64(sp)
	sd	a4,128(sp)
	ld	a4,72(sp)
	sd	a4,136(sp)
	call	sha256_transform
	lbu	a5,3(s0)
	sb	a5,0(s1)
	lhu	a5,2(s0)
	sb	a5,1(s1)
	lw	a5,0(s0)
	srliw	a5,a5,8
	sb	a5,2(s1)
	lw	a5,0(s0)
	sb	a5,3(s1)
	lbu	a5,7(s0)
	sb	a5,4(s1)
	lhu	a5,6(s0)
	sb	a5,5(s1)
	lw	a5,4(s0)
	srliw	a5,a5,8
	sb	a5,6(s1)
	lw	a5,4(s0)
	sb	a5,7(s1)
	lbu	a5,11(s0)
	sb	a5,8(s1)
	lhu	a5,10(s0)
	sb	a5,9(s1)
	lw	a5,8(s0)
	srliw	a5,a5,8
	sb	a5,10(s1)
	lw	a5,8(s0)
	sb	a5,11(s1)
	lbu	a5,15(s0)
	sb	a5,12(s1)
	lhu	a5,14(s0)
	sb	a5,13(s1)
	lw	a5,12(s0)
	srliw	a5,a5,8
	sb	a5,14(s1)
	lw	a5,12(s0)
	sb	a5,15(s1)
	lbu	a5,19(s0)
	sb	a5,16(s1)
	lhu	a5,18(s0)
	sb	a5,17(s1)
	lw	a5,16(s0)
	srliw	a5,a5,8
	sb	a5,18(s1)
	lw	a5,16(s0)
	sb	a5,19(s1)
	lbu	a5,23(s0)
	sb	a5,20(s1)
	lhu	a5,22(s0)
	sb	a5,21(s1)
	lw	a5,20(s0)
	srliw	a5,a5,8
	sb	a5,22(s1)
	lw	a5,20(s0)
	sb	a5,23(s1)
	lbu	a5,27(s0)
	sb	a5,24(s1)
	lhu	a5,26(s0)
	sb	a5,25(s1)
	lw	a5,24(s0)
	srliw	a5,a5,8
	sb	a5,26(s1)
	lw	a5,24(s0)
	sb	a5,27(s1)
	lbu	a5,31(s0)
	sb	a5,28(s1)
	lhu	a5,30(s0)
	sb	a5,29(s1)
	lw	a5,28(s0)
	srliw	a5,a5,8
	sb	a5,30(s1)
	lw	a5,28(s0)
	sb	a5,31(s1)
	ld	a4, 152(sp)
	ld	a5, 0(s2)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L24
	ld	ra,216(sp)
	ld	s0,208(sp)
	ld	s1,200(sp)
	ld	s2,192(sp)
	ld	s3,184(sp)
	ld	s4,176(sp)
	ld	s5,168(sp)
	addi	sp,sp,224
	jr	ra
.L23:
	ld	a5,24(sp)
	mv	a0,s0
	sd	a1,8(sp)
	sd	a5,88(sp)
	ld	a5,32(sp)
	sd	a5,96(sp)
	ld	a5,40(sp)
	sd	a5,104(sp)
	ld	a5,48(sp)
	sd	a5,112(sp)
	ld	a5,56(sp)
	sd	a5,120(sp)
	ld	a5,64(sp)
	sd	a5,128(sp)
	ld	a5,72(sp)
	sd	a5,136(sp)
	ld	a5,80(sp)
	sd	a5,144(sp)
	call	sha256_transform
	ld	a1,8(sp)
	sd	zero,24(sp)
	sd	zero,32(sp)
	sd	zero,40(sp)
	sd	zero,48(sp)
	sd	zero,56(sp)
	sd	zero,64(sp)
	sd	zero,72(sp)
	j	.L19
.L24:
	call	__stack_chk_fail@plt
	.size	sha256_final, .-sha256_final
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align	3
.LC0:
	.string	"wb"
	.align	3
.LC1:
	.string	"Failed to open file"
	.align	3
.LC2:
	.string	"Memory allocation failed"
	.text
	.align	1
	.globl	generate_random_file
	.type	generate_random_file, @function
generate_random_file:
	addi	sp,sp,-48
	sd	s3,8(sp)
	mv	s3,a1
	lla	a1,.LC0
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s4,0(sp)
	call	fopen@plt
	beq	a0,zero,.L34
	mv	s4,a0
	mv	a0,s3
	call	malloc@plt
	mv	s2,a0
	beq	a0,zero,.L27
	mv	s0,a0
	add	s1,a0,s3
	beq	s3,zero,.L29
.L30:
	call	rand@plt
	sb	a0,0(s0)
	addi	s0,s0,1
	bne	s0,s1,.L30
.L29:
	mv	a3,s4
	mv	a2,s3
	li	a1,1
	mv	a0,s2
	call	fwrite@plt
	mv	a0,s2
	call	free@plt
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s4
	ld	s4,0(sp)
	addi	sp,sp,48
	tail	fclose@plt
.L34:
	lla	a0,.LC1
	call	perror@plt
	li	a0,1
	call	exit@plt
.L27:
	lla	a0,.LC2
	call	perror@plt
	mv	a0,s4
	call	fclose@plt
	li	a0,1
	call	exit@plt
	.size	generate_random_file, .-generate_random_file
	.align	1
	.globl	create_directory
	.type	create_directory, @function
create_directory:
	addi	sp,sp,-176
	addi	a5,sp,8
	sd	s1,152(sp)
	la	s1,__stack_chk_guard
	sd	s0,160(sp)
	li	a2,128
	mv	s0,a0
	li	a1,0
	mv	a0,a5
	ld	a4, 0(s1)
	sd	a4, 136(sp)
	li	a4, 0
	sd	ra,168(sp)
	call	memset@plt
	mv	a1,a0
	mv	a0,s0
	call	stat@plt
	li	a5,-1
	beq	a0,a5,.L39
.L35:
	ld	a4, 136(sp)
	ld	a5, 0(s1)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L40
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	addi	sp,sp,176
	jr	ra
.L39:
	li	a1,448
	mv	a0,s0
	call	mkdir@plt
	j	.L35
.L40:
	call	__stack_chk_fail@plt
	.size	create_directory, .-create_directory
	.section	.rodata.str1.8
	.align	3
.LC4:
	.string	"a"
	.align	3
.LC5:
	.string	"./generated_stat_files/performance_output_sha.csv"
	.align	3
.LC6:
	.string	"File Size (KB), RAM Utilization, Max RAM used (KB), Total RAM available (MB), User CPU time, System CPU time, Total CPU time, CPU time used (seconds), Throughput (bytes/sec), SHA-256 Hash (hex)\n"
	.align	3
.LC8:
	.string	"%zu, %.2f, %ld, %ld, %.6f, %.6f, %.6f, %.6f, %.6f, "
	.align	3
.LC9:
	.string	"%02x"
	.text
	.align	1
	.globl	calculate_and_output_utilization_and_performance
	.type	calculate_and_output_utilization_and_performance, @function
calculate_and_output_utilization_and_performance:
	addi	sp,sp,-288
	sd	s4,240(sp)
	la	s4,__stack_chk_guard
	ld	a5, 0(s4)
	sd	a5, 184(sp)
	li	a5, 0
	sd	s0,272(sp)
	sd	s3,248(sp)
	mv	s0,a0
	mv	s3,a1
	li	a0,0
	addi	a1,sp,40
	sd	ra,280(sp)
	sd	s1,264(sp)
	sd	s2,256(sp)
	sd	s5,232(sp)
	fsd	fs0,216(sp)
	fsd	fs1,208(sp)
	fsd	fs2,200(sp)
	fmv.d	fs1,fa0
	fmv.d	fs2,fa1
	call	getrusage@plt
	li	a0,85
	ld	s5,72(sp)
	call	sysconf@plt
	mv	s1,a0
	li	a0,30
	call	sysconf@plt
	mul	a5,s1,a0
	fcvt.d.l	fs0,s5
	fld	fa5,.LC3,a4
	lla	a1,.LC4
	lla	a0,.LC5
	srai	s2,a5,63
	slli	s2,s2,44
	srli	s2,s2,44
	add	s2,s2,a5
	srai	s2,s2,20
	slli	a5,s2,10
	fcvt.d.l	fa4,a5
	fdiv.d	fs0,fs0,fa4
	fmul.d	fs0,fs0,fa5
	call	fopen@plt
	beq	a0,zero,.L41
	mv	s1,a0
	call	ftell@plt
	beq	a0,zero,.L51
.L43:
	fld	fa3,.LC7,a5
	ld	a5,64(sp)
	ld	a3,56(sp)
	fmv.x.d	a4,fs0
	fcvt.d.l	fa5,a5
	ld	a5,48(sp)
	fcvt.d.l	fa1,a3
	fdiv.d	fa5,fa5,fa3
	fcvt.d.l	fa4,a5
	ld	a5,40(sp)
	mv	a6,s2
	fsd	fs2,24(sp)
	fcvt.d.l	fa2,a5
	add	a5,a5,a3
	fcvt.d.l	fa0,a5
	srli	a3,s3,10
	fsd	fs1,16(sp)
	fsd	fa0,8(sp)
	mv	a5,s5
	lla	a2,.LC8
	li	a1,1
	mv	a0,s1
	addi	s3,s0,32
	lla	s2,.LC9
	fdiv.d	fa4,fa4,fa3
	fadd.d	fa5,fa5,fa1
	fsd	fa5,0(sp)
	fadd.d	fa5,fa4,fa2
	fmv.x.d	a7,fa5
	call	__fprintf_chk@plt
.L44:
	lbu	a3,0(s0)
	mv	a2,s2
	addi	s0,s0,1
	li	a1,1
	mv	a0,s1
	call	__fprintf_chk@plt
	bne	s3,s0,.L44
	mv	a1,s1
	li	a0,10
	call	fputc@plt
	mv	a0,s1
	call	fclose@plt
.L41:
	ld	a4, 184(sp)
	ld	a5, 0(s4)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L52
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	ld	s5,232(sp)
	fld	fs0,216(sp)
	fld	fs1,208(sp)
	fld	fs2,200(sp)
	addi	sp,sp,288
	jr	ra
.L51:
	mv	a3,s1
	li	a2,194
	li	a1,1
	lla	a0,.LC6
	call	fwrite@plt
	j	.L43
.L52:
	call	__stack_chk_fail@plt
	.size	calculate_and_output_utilization_and_performance, .-calculate_and_output_utilization_and_performance
	.section	.rodata.str1.8
	.align	3
.LC10:
	.string	"./bin/generated_files"
	.align	3
.LC11:
	.string	"%s/random_file_%zu.dat"
	.section	.text.startup,"ax",@progbits
	.align	1
	.globl	main
	.type	main, @function
main:
	addi	sp,sp,-384
	la	a4,__stack_chk_guard
	ld	a5, 0(a4)
	sd	a5, 248(sp)
	li	a5, 0
	li	a0,0
	sd	ra,376(sp)
	sd	s1,360(sp)
	sd	s2,352(sp)
	sd	s3,344(sp)
	sd	s4,336(sp)
	sd	s7,312(sp)
	sd	s8,304(sp)
	sd	s9,296(sp)
	sd	s10,288(sp)
	sd	s11,280(sp)
	fsd	fs0,264(sp)
	sd	s0,368(sp)
	sd	s5,328(sp)
	sd	s6,320(sp)
	call	time@plt
	sext.w	a0,a0
	call	srand@plt
	lla	a0,.LC10
	call	create_directory
	addi	a5,sp,184
	sd	a5,8(sp)
	fld	fs0,.LC7,a5
	li	a5,1056768
	li	s3,12288
	addi	a5,a5,-2048
	addi	s3,s3,-2048
	addi	s4,sp,120
	lla	s11,.LC12
	lla	s10,.LC13
	lla	s9,.LC14
	lla	s8,.LC15
	addi	s1,sp,56
	addi	s2,sp,24
	lla	s7,.LC10
	sd	a5,0(sp)
.L55:
	mv	a5,s7
	lla	a4,.LC11
	li	a3,128
	li	a2,1
	mv	a6,s3
	li	a1,128
	mv	a0,s4
	call	__snprintf_chk@plt
	mv	a1,s3
	mv	a0,s4
	call	generate_random_file
	call	clock@plt
	ld	a5,0(s8)
	ld	a2,0(s11)
	ld	a3,0(s10)
	ld	a4,0(s9)
	sd	a5,48(sp)
	ld	a5,8(sp)
	addi	s0,s3,-64
	andi	s0,s0,-64
	mv	s5,a0
	sd	a2,24(sp)
	sd	a3,32(sp)
	sd	a4,40(sp)
	mv	s6,s4
	add	s0,s0,a5
.L54:
	ld	t4,0(s6)
	ld	t3,8(s6)
	ld	t1,16(s6)
	ld	a7,24(s6)
	ld	a6,32(s6)
	ld	a2,40(s6)
	ld	a3,48(s6)
	ld	a4,56(s6)
	mv	a1,s1
	addi	s6,s6,64
	mv	a0,s2
	sd	t4,56(sp)
	sd	t3,64(sp)
	sd	t1,72(sp)
	sd	a7,80(sp)
	sd	a6,88(sp)
	sd	a2,96(sp)
	sd	a3,104(sp)
	sd	a4,112(sp)
	call	sha256_transform
	bne	s6,s0,.L54
	mv	a2,s3
	mv	a3,s1
	mv	a1,s4
	mv	a0,s2
	call	sha256_final
	call	clock@plt
	sub	a0,a0,s5
	fcvt.d.l	fa0,a0
	fcvt.d.l	fa1,s3
	li	a5,12288
	fdiv.d	fa0,fa0,fs0
	addi	a5,a5,-2048
	mv	a1,s3
	mv	a0,s1
	add	s3,s3,a5
	fdiv.d	fa1,fa1,fa0
	call	calculate_and_output_utilization_and_performance
	ld	a5,0(sp)
	bne	s3,a5,.L55
	la	a5,__stack_chk_guard
	ld	a4, 248(sp)
	ld	a5, 0(a5)
	xor	a5, a4, a5
	li	a4, 0
	bne	a5,zero,.L60
	ld	ra,376(sp)
	ld	s0,368(sp)
	ld	s1,360(sp)
	ld	s2,352(sp)
	ld	s3,344(sp)
	ld	s4,336(sp)
	ld	s5,328(sp)
	ld	s6,320(sp)
	ld	s7,312(sp)
	ld	s8,304(sp)
	ld	s9,296(sp)
	ld	s10,288(sp)
	ld	s11,280(sp)
	fld	fs0,264(sp)
	li	a0,0
	addi	sp,sp,384
	jr	ra
.L60:
	call	__stack_chk_fail@plt
	.size	main, .-main
	.globl	K
	.section	.rodata.cst8,"aM",@progbits,8
	.align	3
.LC3:
	.word	0
	.word	1079574528
	.align	3
.LC7:
	.word	0
	.word	1093567616
	.align	3
.LC12:
	.dword	-4942790177982912921
	.align	3
.LC13:
	.dword	-6534734903820487822
	.align	3
.LC14:
	.dword	-7276294671082564993
	.align	3
.LC15:
	.dword	6620516960021240235
	.section	.rodata
	.align	3
	.set	.LANCHOR0,. + 0
	.type	K, @object
	.size	K, 256
K:
	.word	1116352408
	.word	1899447441
	.word	-1245643825
	.word	-373957723
	.word	961987163
	.word	1508970993
	.word	-1841331548
	.word	-1424204075
	.word	-670586216
	.word	310598401
	.word	607225278
	.word	1426881987
	.word	1925078388
	.word	-2132889090
	.word	-1680079193
	.word	-1046744716
	.word	-459576895
	.word	-2136890922
	.word	1822831902
	.word	528734635
	.word	1541459225
	.word	1908772491
	.word	1230558814
	.word	1080412329
	.word	1384924620
	.word	474770589
	.word	-1555225642
	.word	-443822787
	.word	171388699
	.word	619653298
	.word	1686647494
	.word	233319309
	.word	180330065
	.word	1165376461
	.word	850664206
	.word	401652016
	.word	788627226
	.word	1003445359
	.word	1700665261
	.word	412337123
	.word	1943483577
	.word	-798791657
	.word	1325607716
	.word	-1157863715
	.word	-1397791615
	.word	1168930429
	.word	-374884841
	.word	1625901621
	.word	1972655638
	.word	-1590173483
	.word	-1648419736
	.word	1098929303
	.word	1317494348
	.word	-1806880879
	.word	1891314540
	.word	124306083
	.zero	32
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
